plugins {
	id 'fabric-loom' version '1.7.+'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
	maven {
  	name = "vram guild"
  	url = "https://maven.vram.io"
  }
  
  maven {
  	name = "terraformers"
  	url = "https://maven.terraformersmc.com/"
  }
  
  maven {
  	name = "cotton"
  	url = "https://server.bbkr.space/artifactory/libs-release/"
  }
  
  maven {
  	name = "shedaniel"
  	url = "https://maven.shedaniel.me/"
  }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	//modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Actually no, just gimme the modules I need
	modImplementation fabricApi.module("fabric-networking-api-v1", project.fabric_version)
	modImplementation fabricApi.module("fabric-object-builder-api-v1", project.fabric_version)
	modImplementation fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version)	
	modImplementation fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
	
	// and lifecycle-events transitive dep
  modImplementation fabricApi.module("fabric-api-base", project.fabric_version)
  
  // Literally so i can mix in to 1 class
  //modCompileOnly "io.vram:frex-fabric:20.5.369"
  //modCompileOnly "io.vram:canvas-fabric:20.5.2698"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.20.5 (24w14a) upwards uses Java 21.
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
